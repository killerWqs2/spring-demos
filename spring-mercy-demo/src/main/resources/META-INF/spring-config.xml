<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd
         http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!--  xml也是可以开启注解配置的  -->
<!--    <context:annotation-config/>-->
<!--    <context:component-scan base-package="org.killers.springbasicdemo.modules"/>-->

    <!--  xml 中这么定义， 有什么意义吗？ 定义别名  -->
    <alias name="admin" alias="administrator"/>

    <bean id="user" class="org.killer.springmercydemo.modules.users.entity.User" >
<!--        setter注入        -->
<!--        <property name="id" value="1"/>-->
<!--        <property name="nickname" value="killerWqs"/>-->

<!--        constructor注入      -->
        <constructor-arg name="id" value="1"/>
        <constructor-arg name="nickname" value="killerWqs"/>
        <constructor-arg name="phone" value="183"/>
    </bean>

    <!-- more bean definitions go here -->
    <bean id="admin" class="org.killer.springmercydemo.modules.users.entity.Administrator" primary="true" parent="user">
        <property name="id" value="2"/>
        <property name="nickname" value="AdminWqs"/>
    </bean>

    <!--  通过自定义factory bean来实现  -->
<!--    <bean id="userFactory" class="org.killers.springbasicdemo.modules.entity.UserFactory"/>-->
<!--    <bean id="user1" factory-bean="userFactory" factory-method="createUser"/>-->

    <!--  通过spring定义的FactoryBean 来实现  -->
<!--    <bean id="userFactoryBean" class="org.killers.springbasicdemo.modules.entity.UserFactoryBean"/>-->

    <!--  通过ServiceLoader来配置  -->
<!--    <bean id="userFactoryServiceLoader" class="org.springframework.beans.factory.serviceloader.ServiceLoaderFactoryBean">-->
<!--        <property name="serviceType" value="org.killers.springbasicdemo.modules.entity.UserFactory"/>-->
<!--    </bean>-->
</beans>